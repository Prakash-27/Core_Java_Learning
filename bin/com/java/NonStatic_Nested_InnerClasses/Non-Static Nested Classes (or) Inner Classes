Inner Class:
============
--> Java inner class or nested class is a class which is declared inside the class or interface.
    ----------------
--> We use inner classes to logically group classes and interfaces in one place so that it can be more readable and maintainable.

--> Additionally, it can access all the members of outer class including private data members and methods.

Advantages:
===========
--> Nested classes represent a special type of relationship that is it can access all the members (data members and methods) of outer class including private.
                                                                    ------------------------------------------------------------------------------------------
--> Nested classes are used to develop more readable and maintainable code because it logically group classes and interfaces in one place only.
                            ----------------------------------------------
--> Code Optimization: it require less code to write.
    ------------------

Types of Nested Classes:
========================
Non-static nested class (inner class):
--------------------------------------
1.Member inner class
2.Anonymous inner class 
3.Local inner class


Let's know more about them
--------------------------
Non-static nested class (inner class):
--------------------------------------

Member Inner Class - A class created within class and outside method.

Anonymous Inner Class - A class created for implementing interface or extending class. 
                        Its name is decided by the java compiler.

Local Inner Class - A class created within method. 


Non-static nested class (inner class):
--------------------------------------
1.Member inner class:
=====================
A non-Static class that is created inside a class but outside a method is called member inner class.


Basic Code:
-----------
class TestMemberOuter1 {

private int data = 30;

class Inner {

void msg(){
 
  System.out.println("data is "+ data); 

}

}

}

public static void main(String args[]){

TestMemberOuter1 obj = new TestMemberOuter1();

TestMemberOuter1.Inner in = obj.new Inner();

in.msg();

}

}

2.Anonymous inner class:
========================
--> A class that have no name is known as anonymous inner class in java. It should be used if you have to override method of class or interface. Java Anonymous inner class can be created by two ways:

--> Class (may be abstract or concrete).

--> Interface 

Basic Code:
-----------
abstract class Person {

abstract void eat();

}

class TestAnonymousInner {

public static void main(String args[]){

Person p = new Person() {

void eat() {

     System.out.println("nice fruits");
}

};

p.eat();

}

}

Basic Code using Interface:
---------------------------
interface Eatable {

void eat();

}

class TestAnonymousInner1 {

public static void main(String args[]) {

Eatable e = new Eatablae() {

public void eat() {

System.out.println("nice fruits");

}

};

p.eat();

}

}

3.Local inner class:
====================
--> A class i.e created inside a method is called local inner class in java. If you want to invoke the methods of local inner class, you must instantiate this class inside the method.

Basic Code:
-----------
public class localInner1 {

private int data = 30; //instance variable 

void display() {

class Local {

void msg() {

System.out.println(data);

}

}

Local l = new Local();

l.msg();

}

public static void main(String args[]) {

localInner1 obj = new localInner1();

obj.display();

}

}